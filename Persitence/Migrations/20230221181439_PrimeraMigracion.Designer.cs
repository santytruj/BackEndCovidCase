// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persitence.Contexts;

#nullable disable

namespace Persitence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230221181439_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CovidCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("date")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateChecked")
                        .HasColumnType("datetime2");

                    b.Property<int?>("death")
                        .HasColumnType("int");

                    b.Property<int?>("deathIncrease")
                        .HasColumnType("int");

                    b.Property<string>("hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("hospitalized")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedCumulative")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedCurrently")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedIncrease")
                        .HasColumnType("int");

                    b.Property<int?>("inIcuCumulative")
                        .HasColumnType("int");

                    b.Property<int?>("inIcuCurrently")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastModifiedTable")
                        .HasColumnType("datetime2");

                    b.Property<int?>("negative")
                        .HasColumnType("int");

                    b.Property<int?>("negativeIncrease")
                        .HasColumnType("int");

                    b.Property<int?>("onVentilatorCumulative")
                        .HasColumnType("int");

                    b.Property<int?>("onVentilatorCurrently")
                        .HasColumnType("int");

                    b.Property<int?>("pending")
                        .HasColumnType("int");

                    b.Property<int?>("posNeg")
                        .HasColumnType("int");

                    b.Property<int?>("positive")
                        .HasColumnType("int");

                    b.Property<int?>("positiveIncrease")
                        .HasColumnType("int");

                    b.Property<string>("recovered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("states")
                        .HasColumnType("int");

                    b.Property<int?>("total")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestResults")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestResultsIncrease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CovidCase", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.CovidForState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("checkTimeEt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("commercialScore")
                        .HasColumnType("int");

                    b.Property<string>("dataQualityGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("date")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateChecked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("death")
                        .HasColumnType("int");

                    b.Property<int?>("deathConfirmed")
                        .HasColumnType("int");

                    b.Property<int?>("deathIncrease")
                        .HasColumnType("int");

                    b.Property<int?>("deathProbable")
                        .HasColumnType("int");

                    b.Property<string>("fips")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("hospitalized")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedCumulative")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedCurrently")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedDischarged")
                        .HasColumnType("int");

                    b.Property<int?>("hospitalizedIncrease")
                        .HasColumnType("int");

                    b.Property<int?>("inIcuCumulative")
                        .HasColumnType("int");

                    b.Property<int?>("inIcuCurrently")
                        .HasColumnType("int");

                    b.Property<string>("lastUpdateEt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("negative")
                        .HasColumnType("int");

                    b.Property<int?>("negativeIncrease")
                        .HasColumnType("int");

                    b.Property<int?>("negativeRegularScore")
                        .HasColumnType("int");

                    b.Property<int?>("negativeScore")
                        .HasColumnType("int");

                    b.Property<int?>("negativeTestsAntibody")
                        .HasColumnType("int");

                    b.Property<string>("negativeTestsPeopleAntibody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("negativeTestsViral")
                        .HasColumnType("int");

                    b.Property<int?>("onVentilatorCumulative")
                        .HasColumnType("int");

                    b.Property<int?>("onVentilatorCurrently")
                        .HasColumnType("int");

                    b.Property<string>("pending")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("posNeg")
                        .HasColumnType("int");

                    b.Property<int?>("positive")
                        .HasColumnType("int");

                    b.Property<int?>("positiveCasesViral")
                        .HasColumnType("int");

                    b.Property<int?>("positiveIncrease")
                        .HasColumnType("int");

                    b.Property<int?>("positiveScore")
                        .HasColumnType("int");

                    b.Property<int?>("positiveTestsAntibody")
                        .HasColumnType("int");

                    b.Property<string>("positiveTestsAntigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("positiveTestsPeopleAntibody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("positiveTestsPeopleAntigen")
                        .HasColumnType("int");

                    b.Property<int?>("positiveTestsViral")
                        .HasColumnType("int");

                    b.Property<int?>("probableCases")
                        .HasColumnType("int");

                    b.Property<int?>("recovered")
                        .HasColumnType("int");

                    b.Property<int?>("score")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("total")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestEncountersViral")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestResults")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestResultsIncrease")
                        .HasColumnType("int");

                    b.Property<string>("totalTestResultsSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("totalTestsAntibody")
                        .HasColumnType("int");

                    b.Property<string>("totalTestsAntigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("totalTestsPeopleAntibody")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestsPeopleAntigen")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestsPeopleViral")
                        .HasColumnType("int");

                    b.Property<int?>("totalTestsViral")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CovidForState", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
